{"version":3,"sources":["images/thekeep.png","components/Hamburger.jsx","components/Navbar.jsx","components/Notes.jsx","components/Home.jsx","components/Update.jsx","components/Footer.jsx","components/Registration.jsx","components/Login.jsx","components/Wrapper.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hamburger","useState","refresher","setRefresher","Dropdown","className","Toggle","variant","id","Menu","Item","href","onClick","navigate","axios","get","withCredentials","then","response","localStorage","clear","catch","error","console","log","Navbar","props","refs","userState","setUserState","setError","useEffect","getItem","data","src","thekeep","alt","path","length","to","firstName","Notes","info","undefined","tasks","map","item","index","key","e","preventDefault","_id","temp","filter","el","put","setRefreshState","refreshState","err","onDelete","title","date","substring","description","Home","formState","setFormState","errorState","setErrorState","res","handleChange","target","name","value","onSubmit","unshift","errors","message","type","placeholder","onChange","rows","Update","lastName","email","password","confirmPassword","onChangeHandler","alert","Button","size","delete","Footer","year","Date","getFullYear","Registration","registerState","setRegisterState","post","msg","setItem","Login","loginState","setLoginState","Wrapper","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae7b857f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thekeep.0294faef.png\";","import React from 'react'\nimport axios from 'axios'\nimport { navigate } from \"@reach/router\";\nimport { useState } from \"react\";\nimport ListIcon from '@material-ui/icons/List';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nconst Hamburger = () => {\n    const [refresher, setRefresher] = useState(false)\n\n    const onClickHandler = () => {\n        axios.get('http://localhost:8000/api/v1/logout', { withCredentials: true })\n            .then(response => {\n                setRefresher(!refresher)\n                localStorage.clear();\n                navigate('/')\n            })\n            .catch(error => console.log(error))\n    }\n\n    const navigateHandler= () => {\n        navigate('/update')\n    }\n\n    return (\n        <div>\n            <Dropdown className=\"test\">\n                <Dropdown.Toggle  variant=\"\" id=\"dropdown-basic\">\n                <ListIcon className=\"listicon\"/>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\" onClick={navigateHandler}>Edit Profile</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\" onClick={onClickHandler} >Logout</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    )\n}\n\nexport default Hamburger\n","import React from \"react\";\nimport { Link, navigate } from \"@reach/router\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport Hamburger from \"./Hamburger\";\nimport thekeep from '../images/thekeep.png'\n\nconst Navbar = (props) => {\n  console.log(\"navbar prop!!!\", props.refs);\n\n  const [userState, setUserState] = useState({})\n  const [error, setError] = useState(\"\")\n\n  useEffect(() => {\n    if (localStorage.getItem('userId') === null) {\n      navigate('/')\n    } else {\n      axios.get(`http://localhost:8000/api/v1/readOne/${localStorage.getItem('userId')}`, { withCredentials: true })\n        .then(response => {\n          console.log(response)\n          setUserState(response.data)\n        })\n        .catch(error => {\n          console.log(error)\n          setUserState({})\n          setError(\"Please login to display data\")\n        })\n    }\n\n  }, [])\n\n  return (\n    <header className=\"navheader\">\n      <img className=\"thekeepimg\" src={thekeep} alt=\"\" />\n      {props.path !== \"/\" ?\n        <div>\n          {error.length > 0 ? <Link to=\"/\">Login to view data</Link> : null}\n          <div className=\"hamburgericon\">\n            <Hamburger />\n          </div>\n          <h1 className=\"name\">Hello {userState.firstName}</h1></div>\n        : null\n\n      }\n    </header>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport axios from 'axios'\n\nconst Notes = (props) => {\n    console.log(\"the props notes\", props.info);\n    console.log(\"the props refs\", props.refs)\n\n    const onDelete = (e, item) => {\n        console.log(\"e\", e);\n        e.preventDefault();\n        console.log(\"the item:\", item);\n        console.log(\"the item _id:\", item._id);\n        let temp = { ...props.info }\n        temp.tasks = temp.tasks.filter(el => el._id !== item._id)\n        axios.put(`http://localhost:8000/api/v1/updateOne/${props.info._id}`, temp, { withCredentials: true })\n            .then(() => props.refs.setRefreshState(!props.refs.refreshState))\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        <div>\n            {props.info.tasks !== undefined && props.info.tasks.map((item, index) => (\n\n                <div className=\"note\" key={index}>\n\n                    <div className=\"innNote\">\n                        <button onClick={(e) => onDelete(e, item)}><DeleteIcon /></button>\n                        <h1>{item.title}</h1>\n                        <p>{item.date.substring(0, 10)}</p>\n                    </div>\n                    <hr />\n                    <div className=\"p\">\n                        <p>{item.description}</p>\n                    </div>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Notes\n","import React, { useState, useEffect } from \"react\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { navigate } from '@reach/router';\nimport axios from \"axios\";\nimport Navbar from './Navbar'\nimport Notes from './Notes'\n\nconst Home = () => {\n    const [userState, setUserState] = useState({})\n    const [formState, setFormState] = useState({\n        title: '',\n        description: '',\n        date: '',\n    })\n    const [errorState, setErrorState] = useState(\"\")\n    const [refreshState, setRefreshState] = useState(false)\n\n    useEffect(() => {\n        if (localStorage.getItem('userId') === null) {\n            navigate('/')\n        } else {\n            axios.get(`http://localhost:8000/api/v1/readOne/${localStorage.getItem('userId')}`, { withCredentials: true })\n                .then(res => {\n                    console.log(res)\n                    setUserState(res.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                    setUserState({})\n                    setErrorState(\"Please login to display data\")\n                })\n        }\n    }, [refreshState])\n\n\n    console.log(\"localstorage from home\", localStorage.getItem('userId'));\n    console.log(\"userstate from home\", userState)\n    console.log(\"formstate from home\", formState)\n\n    const handleChange = (e) => {\n        setFormState({ ...formState, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let temp = { ...userState };\n        temp.tasks.unshift(formState)\n        // unshift to show tasks newest to oldest\n        console.log(\"temp\", temp);\n        console.log(\"temp.tasks\", temp.tasks);\n        axios.put(`http://localhost:8000/api/v1/updateOne/${localStorage.getItem('userId')}`, temp, { withCredentials: true })\n            .then(res => {\n                console.log(res)\n                setRefreshState(!refreshState)\n                if (res.data.errors) {\n                    setErrorState({\n                        title: res.data.errors.title ? res.data.errors.title.message : '',\n                        description: res.data.errors.description ? res.data.errors.description.message : '',\n                        date: res.data.errors.date ? res.data.errors.date.message : ''\n                    })\n                } else {\n                    console.log('successfully updated the users tasks');\n                    setFormState({\n                        title: '',\n                        description: '',\n                        date: '',\n                    })\n                    setRefreshState(!refreshState)\n                    navigate('/home')\n                }\n            })\n            .catch(error => {\n                console.log(\"the error:\", error)\n            })\n    }\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"home\" >\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" name=\"title\" value={formState.title} placeholder=\"Title\" onChange={handleChange} />\n                    {errorState.title !== '' ? <p>{errorState.title}</p> : null}\n                    <input type=\"date\" className=\"date\" value={formState.date} onChange={handleChange} name=\"date\" />\n                    {errorState.date !== '' ? <p>{errorState.date}</p> : null}\n                    <textarea type=\"text\" name=\"description\" value={formState.description} placeholder=\"Write a task down...\" rows=\"3\" onChange={handleChange} />\n                    {errorState.description !== '' ? <p>{errorState.description}</p> : null}\n                    <button type=\"submit\"><AddBoxIcon /></button>\n                </form>\n                <Notes info={userState} refs={{ refreshState, setRefreshState }} />\n\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\";\nimport { Link, navigate } from '@reach/router';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Navbar from './Navbar'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from 'react-bootstrap/Button'\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\n\nconst Update = () => {\n    const [userState, setUserState] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const [errorState, setErrorState] = useState(\"\")\n    const [refreshState, setRefreshState] = useState(false)\n\n    useEffect(() => {\n        if (localStorage.getItem('userId') === null) {\n            navigate('/')\n        } else {\n            axios.get(`http://localhost:8000/api/v1/readOne/${localStorage.getItem('userId')}`, { withCredentials: true })\n                .then(res => {\n                    console.log(res)\n                    setUserState(res.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                    setUserState({})\n                    setErrorState(\"Please login to display data\")\n                })\n        }\n    }, [refreshState])\n\n    console.log(\"localstorage from update\", localStorage.getItem('userId'));\n    console.log(\"userstate from update\", userState)\n\n    const onChangeHandler = (e) => {\n        setUserState({ ...userState, [e.target.name]: e.target.value })\n    }\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let temp = { ...userState };\n        console.log(\"temp from update\", temp);\n        axios.put(`http://localhost:8000/api/v1/updateinfo/${localStorage.getItem('userId')}`, temp, { withCredentials: true })\n            .then(res => {\n                console.log(res)\n                setRefreshState(!refreshState)\n                if (res.data.errors) {\n                    setErrorState({\n                        firstName: res.data.errors.firstName ? res.data.errors.firstName.message : '',\n                        lastName: res.data.errors.lastName ? res.data.errors.lastName.message : '',\n                        email: res.data.errors.email ? res.data.errors.email.message : '',\n                        password: res.data.errors.password ? res.data.errors.password.message : '',\n                        confirmPassword: res.data.errors.confirmPassword ? res.data.errors.confirmPassword.message : '',\n                    })\n                } else {\n                    console.log('successfully updated the user info');\n                    setRefreshState(!refreshState)\n                    alert(`Profile Updated ${userState.firstName}`)\n                    navigate('/home')\n                    \n                }\n            })\n            .catch(error => {\n                console.log(\"the error:\", error)\n            })\n    }\n\n    const handleDelete = () => {\n        axios.delete(`http://localhost:8000/api/v1/deleteOne/${localStorage.getItem('userId')}` , { withCredentials: true})\n            .then(res => {\n                console.log(res)\n                console.log('user has been deleted');\n                localStorage.clear();\n                navigate('/')\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    return (\n        <div>\n            <Navbar refs={{ refreshState, setRefreshState }} />\n            <Link to=\"/home\"><ArrowBackIcon className=\"back\" /></Link>\n            <div className=\"updatepage\">\n                <form onSubmit={handleUpdate}>\n                    <h1>Edit Profile</h1>\n                    <input type=\"text\" name=\"firstName\" value={userState.firstName} onChange={onChangeHandler} />\n                    {errorState.firstName !== '' ? <p>{errorState.firstName}</p> : null}\n                    <input type=\"text\" name=\"lastName\" value={userState.lastName} onChange={onChangeHandler} />\n                    {errorState.lastName !== '' ? <p>{errorState.lastName}</p> : null}\n                    <input type=\"text\" name=\"email\" value={userState.email} onChange={onChangeHandler} />\n                    {errorState.email !== '' ? <p>{errorState.email}</p> : null}\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={onChangeHandler} />\n                    {errorState.password !== '' ? <p>{errorState.password}</p> : null}\n                    <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" onChange={onChangeHandler} />\n                    {errorState.confirmPassword !== '' ? <p>{errorState.confirmPassword}</p> : null}\n                    <button type='submit'><UpdateIcon /></button>\n                </form>\n                <Button className=\"deleteAccount\" variant=\"danger\" size=\"sm\" onClick={handleDelete}>Delete Account <DeleteSweepIcon /></Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Update\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright ⓒ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport InputIcon from '@material-ui/icons/Input';\nimport { navigate } from '@reach/router';\n\nconst Registration = () => {\n\n    const [registerState, setRegisterState] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const [errorState, setErrorState] = useState([])\n\n    const onChangeHandler = (e) => {\n        setRegisterState({\n            ...registerState, [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/v1/create', registerState, {withCredentials:true})\n            .then(res => {\n                if (res.data.errors) {\n                    setErrorState({\n                        firstName: res.data.errors.firstName ? res.data.errors.firstName.message : '',\n                        lastName: res.data.errors.lastName ? res.data.errors.lastName.message : '',\n                        email: res.data.errors.email ? res.data.errors.email.message : '',\n                        password: res.data.errors.password ? res.data.errors.password.message : '',\n                        confirmPassword: res.data.errors.confirmPassword ? res.data.errors.confirmPassword.message : '',\n                    })\n                } else if(res.data.msg === \"Email already exists\") {\n                    console.log(res.data.msg)\n                    setErrorState({email: \"A user with this email is already registered to The Keep\"})\n                } else {\n                    localStorage.setItem('userId', res.data._id)\n                    console.log('registration Succsesful');\n                    navigate('/home')\n                }\n            })\n            .catch(err => { console.log(err)\n            })\n    }\n\n    return (\n            <div>\n                <form onSubmit={onSubmitHandler}>\n                    <h1>Register</h1>\n                    <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" onChange={onChangeHandler} />\n                    {errorState.firstName !== '' ? <p>{errorState.firstName}</p> : null}\n                    <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" onChange={onChangeHandler} />\n                    {errorState.lastName !== '' ? <p>{errorState.lastName}</p> : null}\n                    <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={onChangeHandler} />\n                    {errorState.email !== '' ? <p>{errorState.email}</p> : null}\n                    <input type=\"text\" type=\"password\" name=\"password\" placeholder=\"Password\" onChange={onChangeHandler} />\n                    {errorState.password !== '' ? <p>{errorState.password}</p> : null}\n                    <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" onChange={onChangeHandler} />\n                    {errorState.confirmPassword !== '' ? <p>{errorState.confirmPassword}</p> : null}\n                    <button type='submit'><InputIcon /></button>\n                </form>\n            </div>\n    )\n}\n\nexport default Registration\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { navigate } from '@reach/router';\n\nconst Login = () => {\n\n    const [loginState, setLoginState] = useState({\n        email: '',\n        password: ''\n    })\n\n    const [errorState, setErrorState] = useState([])\n\n    const onChangeHandler = (e) => {\n        setLoginState({\n            ...loginState, [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/v1/login', loginState, { withCredentials: true })\n            .then(res => {\n                console.log(res);\n                if (res.data.errors) {\n                    setErrorState({\n                        email: res.data.errors.email ? res.data.errors.email.message : '',\n                        password: res.data.errors.password ? res.data.errors.password.message : '',\n                 }) \n                } else if (res.data.msg !== 'success') {\n                    console.log(res.data.msg)\n                    setErrorState({\n                        email: \"This email doesn't exist or password is incorrect\",\n                 }) \n                    \n                } else {\n                    localStorage.setItem('userId', res.data._id)\n                    console.log(localStorage.getItem('userId'));\n                    console.log('login succsesful');\n                    navigate('/home')\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmitHandler}>\n                <h1>Login</h1>\n                {errorState.email !== '' ? <p>{errorState.email}</p> : null}\n                <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={onChangeHandler} />\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={onChangeHandler} />\n                <button type=\"submit\"><LaunchIcon /></button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport Registration from './Registration'\nimport Login from './Login'\nimport Navbar from './Navbar'\n\nconst Wrapper = () => {\n    return (\n        <div className=\"wrapper\">\n            <Navbar path=\"/\" />\n            <Registration />\n            <Login />\n        </div>\n    )\n}\n\nexport default Wrapper\n","import React from 'react';\nimport Home from './components/Home'\nimport Update from \"./components/Update\";\nimport Footer from './components/Footer'\nimport { Router } from '@reach/router'\nimport Wrapper from './components/Wrapper';\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Wrapper path=\"/\" />\n        <Home path=\"/home\" />\n        <Update path=\"/update\"/>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}